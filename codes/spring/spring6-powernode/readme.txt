1. OCP
    * 什么是OCP？
        OCP是软件七大开发原则当中最基本的一个原则：开闭原则
        对什么开？对扩展开放
        对什么闭？对修改关闭

    * OCP原则是最核心的，最基本的，其他的六个原则都是为这个原则服务的。
    * OCP开闭原则的核心是什么？
        只要你在扩展系统功能的时候，没有修改以前写好的代码，那么就是符合OCP原则的。
        反之，如果在扩展系统功能的时候，修改了以前的代码，那么这个设计就是失败的，违背了OCP原则。

    * 当进行系统功能扩展的时候，如果动了之前稳定的程序，修改了之前的代码，之前的所有程序都需要进行重新测试，这是不想看到的，非常麻烦。


2. 依赖倒置原则（DIP）
    * 什么是依赖倒置原则？
        面向接口编程，面向抽象编程，不要面向具体编程
    * 依赖倒置原则的目的？
        降低程序耦合度，提高扩展力
    * 什么叫做符合依赖倒置？
        上 不依赖 下，就是符合。（完全面向接口编程）
    * 什么叫做违背依赖倒置原则？
        上 依赖 下，就是违背，只要“下”一动，“上”就会受到牵连。


3. 什么是控制反转？
    控制反转：IoC（Inversion of Control）
    反转的是什么？
        反转的是两件事：
            第一件事：我不在程序中采用硬编码的方式new对象了。（new对象的权利交出去）
            第二件事：我不在程序中采用硬编码的方式维护对象的关系了。（对象间关系的维护权交出去）

    控制反转：是一种编程思想，或者叫做一种新型的设计模式。

4. Spring 框架

    * Spring框架实现了控制反转IOC这种思想

    * Spring是一个实现了IOC思想的容器

    * 控制反转的实现方式有多种，其中比较重要的叫做：依赖注入（Dependency Injection, DI）

    * 控制反转是一种思想，依赖注入是这种思想的具体实现。

    * 依赖注入包括两种方式：
        第一种：set注入
        第二种：构造方法注入

    * 依赖注入中“依赖“是什么意思？”注入“是什么意思？
        依赖：对象间的关系
        注入：是一种手段，通过这种手段，让两个对象产生关系。
        依赖注入：对象间的关系通过注入来维护。


